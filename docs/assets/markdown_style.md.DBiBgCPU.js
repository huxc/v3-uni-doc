import{_ as i,c as a,o as e,a4 as n,a8 as p,a9 as t,aa as s}from"./chunks/framework.B2heqKLL.js";const m=JSON.parse('{"title":"样式","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/style.md","filePath":"markdown/style.md"}'),l={name:"markdown/style.md"},h=n(`<h1 id="样式" tabindex="-1">样式 <a class="header-anchor" href="#样式" aria-label="Permalink to &quot;样式&quot;">​</a></h1><p>项目预设了<code>UnoCss</code>。原子化 <code>CSS</code> 引擎，通过只生成在实际页面上使用的样式，大幅减少了样式表的体积，提升了加载速度和页面响应性。</p><h2 id="使用-unocss" tabindex="-1">使用 UnoCss <a class="header-anchor" href="#使用-unocss" aria-label="Permalink to &quot;使用 UnoCss&quot;">​</a></h2><p>在页面或组件中，可以直接使用 Unocss 预设提供的类名来定义样式。如果你还不熟悉<a href="https://unocss.dev/" target="_blank" rel="noreferrer">UnoCss 原子类</a>，查阅<a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">windcss</a>。也可在工具网站转换<a href="https://to-unocss.netlify.app/" target="_blank" rel="noreferrer">CssToUnocss</a><br> 在组件中使用：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-blue-500 text-white p-4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;这是一个带有白色文本的蓝框&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- 或者 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bg-blue-500</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> text-white</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> p-4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;这是一个带有白色文本的蓝框&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> scoped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>在上面的例子中，<code>.bg-blue-500, .text-white, p-4</code> 等类名会在构建时被 <code>UnoCss</code> 自动提取和优化。<br> 安装<code>VSCode</code>插件<code>unocss</code>后，鼠标移动到原子类上可显示预览如：</p><p><img src="`+p+'" alt="unocss"></p><p>安装<code>VSCode</code>插件<code>To Unocss</code>后，可以将<code>css</code>的样式转换为<code>UnoCss</code>的原子类，如图：</p><p><img src="'+t+`" alt="unocss"> 点击类名前面的复制按钮可直接复制在页面中使用</p><h2 id="配置-unocss" tabindex="-1">配置 UnoCss <a class="header-anchor" href="#配置-unocss" aria-label="Permalink to &quot;配置 UnoCss&quot;">​</a></h2><p>在 <code>unocss.config.{t,j}s</code>配置文件中， 可以通过配置 <code>shortcuts</code> 来定义和管理组合样式，如下代码：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* 自定义</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@see</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https://github.com/unocss/unocss#shortcuts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  shortcuts: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;h-safe-bottom&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;h-[constant(safe-area-inset-bottom)] h-[env(safe-area-inset-bottom)]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;h-safe-top&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;h-[var(--status-bar-height)]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="尺寸单位" tabindex="-1">尺寸单位 <a class="header-anchor" href="#尺寸单位" aria-label="Permalink to &quot;尺寸单位&quot;">​</a></h2><p>在一定的设计理念下，无论是<code>unocss</code>默认预设，还是<code>tailwindcss</code>和<code>windicss</code>框架，默认的单位都是 <code>rem</code></p><p><img src="`+s+'" alt="unocss"></p><p>如果要改变单位就要在属性后面添加单位，如：使用 <code>w-[10rpx]</code> 可以表示 <code>width: 10rpx</code>；但这种方式不够简洁且不能使用属性的方式编写</p><h3 id="如何实现-1-单位-1rpx" tabindex="-1">如何实现 1 单位=1rpx <a class="header-anchor" href="#如何实现-1-单位-1rpx" aria-label="Permalink to &quot;如何实现 1 单位=1rpx&quot;">​</a></h3><p><code>rem</code> 是相对于 <code>html</code> 的 <code>font-size</code> 计算的， <code>html</code> 默认 <code>font-size</code> 是 <code>16px</code>, 也就是说 <code>1rem = 16px</code> 但是, 在原子 css 的默认预设中，<code>1 单位 = 0.25rem</code>，如下图</p><p><img src="'+s+`" alt="unocss"></p><p>反之就是<code>1rem = 4px</code>, 所以将 <code>font-size</code> 修改成 <code>4px</code>，然后就不用再去计算了， <code>w-1</code> 就是 <code>width: 1px</code>, <code>w-100</code> 就是 <code>width: 100px</code><br> 在 uniapp 中的 rpx 换算公式如下：<br><code>设计稿 1px / 设计稿基准宽度 = 框架样式 1rpx / 750rpx</code> <br></p><p>换言之，页面元素宽度在 uni-app 中的宽度计算公式：<br><code>750 * 元素在设计稿中的宽度 / 设计稿基准宽度</code><br></p><p><strong>举例说明</strong></p><ul><li>若设计稿宽度为 <code>750px</code>，元素 <code>A</code> 在设计稿上的宽度为 <code>100px</code>，那么元素 <code>A</code> 在 <code>uni-app</code> 里面的宽度应该设为：<code>750 \\* 100 / 750</code>，结果为：<code>100rpx</code>。</li><li>若设计稿宽度为 <code>640px</code>，元素 <code>A</code> 在设计稿上的宽度为 <code>100px</code>，那么元素 <code>A</code> 在 <code>uni-app</code> 里面的宽度应该设为：<code>750 \\* 100 / 640</code>，结果为：<code>117rpx</code>。</li><li>若设计稿宽度为 <code>375px</code>，元素 <code>B</code> 在设计稿上的宽度为 <code>200px</code>，那么元素 <code>B</code> 在 <code>uni-app</code> 里面的宽度应该设为：<code>750 \\* 200 / 375</code>，结果为：<code>400rpx</code>。<br></li></ul><hr><p>所以在设计稿宽度为 750 的时候: <code>1单位 = 1px = 1rpx</code><br></p><p>在<code>unocss.config.{t,j}s</code>中使用<code>unocss-preset-uni</code>预设，配置如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { presetUni } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@uni-helper/unocss-preset-uni&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  presets: [</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    presetUni</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      //   remRpx: false // 此项为关闭配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      remRpx: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        baseFontSize: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        screenWidth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">750</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>此时就是 <code>1单位 = 1px = 1rpx</code>；如图：</p><p><img src="`+s+'" alt="unocss"></p><div class="danger custom-block"><p class="custom-block-title">注意</p><ul><li>此预设要求设计师必须使用 iPhone6 作为视觉稿的标准。如果设计稿不是 750px。需要自行修改配置文件。</li><li>rpx 是和宽度相关的单位，屏幕越宽，该值实际像素越大。如不想根据屏幕宽度缩放，则应该使用 px 单位。关闭配置文件中 remRpx 配置</li></ul></div>',30),d=[h];function o(c,k,r,E,g,y){return e(),a("div",null,d)}const b=i(l,[["render",o]]);export{m as __pageData,b as default};
